# -*- coding: utf-8 -*-
"""
Created on Tue Aug 17 14:59:55 2021

@author: Master-Yi
"""


import matplotlib.pyplot as plt


train_losses = [1.4988, 1.2792, 1.2453, 1.2383, 1.2133, 1.1942, 1.2123, 1.2003, 1.1805, 1.1966, 1.1832, 1.1695, 1.1237, 1.1192, 1.1033, 1.0799, 1.0564, 1.0435, 1.0329, 1.0273, 0.9994, 0.961, 0.9257, 0.8266, 0.7237, 0.5769, 0.4487, 0.3501, 0.2803, 0.2361, 0.1915, 0.1819, 0.1636, 0.1367, 0.1164, 0.1171, 0.1048, 0.1002, 0.0971, 0.0771, 0.0842, 0.0737, 0.0732, 0.0619, 0.0601, 0.0646, 0.0641, 0.0592, 0.0614, 0.0532, 0.0603, 0.0578, 0.0511, 0.055, 0.0542, 0.0536, 0.0519, 0.0539, 0.0494, 0.0475, 0.0452, 0.0416, 0.0415, 0.051, 0.0472, 0.0414, 0.0364, 0.0363, 0.0478, 0.0448, 0.0387, 0.035, 0.0397, 0.0352, 0.0406, 0.0373, 0.0433, 0.0358, 0.0475, 0.0392, 0.0407, 0.0507, 0.0422, 0.0412, 0.0439, 0.0383, 0.0404, 0.03, 0.0376, 0.031, 0.0308, 0.0323, 0.0406, 0.0318, 0.04, 0.034, 0.0392, 0.0371, 0.0395, 0.0381]
test_losses = [2.2589, 2.2522, 2.2593, 2.2246, 2.2328, 2.1968, 2.1853, 2.1832, 2.1843, 2.215, 2.1084, 2.4341, 2.1441, 2.2501, 2.2492, 2.0074, 2.2816, 2.3639, 2.6255, 2.2826, 2.2188, 2.1101, 2.3226, 2.2284, 1.7814, 1.3988, 1.1635, 0.8699, 0.9059, 1.575, 0.6946, 0.8711, 0.5531, 0.4207, 0.5718, 0.417, 0.3818, 0.3302, 0.4414, 0.2303, 0.3611, 0.5783, 0.4322, 1.6973, 0.1844, 0.4938, 0.2796, 0.3071, 0.1566, 0.3803, 0.2249, 0.216, 0.5461, 0.6776, 2.0197, 0.4531, 0.2738, 0.2097, 0.2559, 0.3646, 0.2701, 0.2581, 0.5028, 0.3121, 0.3534, 0.2475, 0.2776, 1.1047, 0.2592, 0.3179, 0.263, 0.3665, 0.55, 0.1743, 0.2241, 0.2401, 0.4207, 0.1837, 0.4846, 0.2852, 0.1945, 0.1981, 0.328, 0.2779, 0.6833, 0.218, 0.2735, 0.3017, 0.2865, 0.3351, 0.2115, 0.2856, 0.2732, 0.4278, 0.1897, 0.2452, 0.2424, 0.3537, 0.2934, 0.3997]
train_acces = [0.6479, 0.6861, 0.6892, 0.6871, 0.691, 0.6927, 0.6887, 0.6914, 0.696, 0.6911, 0.6926, 0.6928, 0.6978, 0.6969, 0.6978, 0.7014, 0.7044, 0.7047, 0.7083, 0.7079, 0.7167, 0.7295, 0.7397, 0.7658, 0.7959, 0.8371, 0.8766, 0.9076, 0.9274, 0.9403, 0.9518, 0.9556, 0.9618, 0.9675, 0.9732, 0.9741, 0.9773, 0.979, 0.9806, 0.9849, 0.9843, 0.9868, 0.9869, 0.9888, 0.99, 0.9892, 0.9892, 0.9903, 0.99, 0.9916, 0.9908, 0.991, 0.9928, 0.9919, 0.9917, 0.9927, 0.9928, 0.9921, 0.9933, 0.9937, 0.9939, 0.9943, 0.9942, 0.9933, 0.9938, 0.9945, 0.9952, 0.9951, 0.9941, 0.9944, 0.9954, 0.9954, 0.995, 0.9956, 0.9949, 0.9954, 0.9952, 0.9955, 0.9947, 0.9952, 0.9954, 0.9948, 0.9954, 0.9953, 0.9951, 0.9957, 0.9957, 0.9963, 0.9959, 0.9964, 0.9965, 0.9964, 0.9957, 0.9967, 0.9962, 0.9962, 0.9962, 0.9963, 0.9961, 0.9962]
test_acces = [0.4764, 0.4762, 0.4762, 0.4763, 0.4325, 0.4762, 0.4763, 0.4763, 0.4761, 0.4764, 0.4708, 0.4288, 0.4744, 0.4658, 0.4371, 0.4647, 0.4264, 0.4163, 0.3836, 0.4598, 0.4422, 0.4706, 0.4573, 0.5253, 0.5748, 0.6906, 0.7583, 0.8226, 0.8232, 0.7293, 0.8776, 0.8516, 0.9042, 0.9289, 0.9153, 0.9345, 0.9447, 0.9519, 0.9385, 0.9691, 0.9509, 0.9301, 0.9511, 0.8424, 0.9798, 0.9519, 0.972, 0.9708, 0.9834, 0.9636, 0.9786, 0.9813, 0.9504, 0.9482, 0.8449, 0.9592, 0.9768, 0.98, 0.9801, 0.9676, 0.9775, 0.9801, 0.9663, 0.9768, 0.9757, 0.9814, 0.9813, 0.9298, 0.9812, 0.9784, 0.9809, 0.9789, 0.9636, 0.9872, 0.9846, 0.9845, 0.974, 0.9883, 0.9657, 0.9804, 0.9871, 0.9875, 0.9794, 0.9808, 0.9586, 0.9861, 0.9823, 0.985, 0.9823, 0.9826, 0.9879, 0.9835, 0.9829, 0.9768, 0.9894, 0.9857, 0.9869, 0.981, 0.9857, 0.9797]
train_wers = [59.2655, 54.1702, 53.8164, 54.1155, 53.3953, 53.2761, 53.6751, 53.2847, 53.0246, 53.4972, 53.349, 53.4321, 52.5673, 52.8413, 52.759, 52.2564, 51.8402, 51.807, 51.3009, 51.2364, 49.844, 47.916, 45.6607, 40.953, 35.4105, 28.3747, 21.4136, 16.2604, 12.807, 10.5361, 8.5552, 7.8372, 6.6681, 5.6287, 4.6986, 4.5051, 3.9689, 3.652, 3.3808, 2.6924, 2.7215, 2.245, 2.302, 1.9364, 1.7585, 1.8658, 1.8939, 1.6846, 1.7158, 1.4756, 1.5594, 1.5619, 1.2131, 1.3966, 1.4353, 1.2502, 1.2517, 1.3508, 1.1768, 1.1205, 1.0149, 1.0029, 0.9872, 1.1413, 1.0557, 0.9227, 0.8565, 0.8556, 1.017, 0.9584, 0.7836, 0.7965, 0.8428, 0.7438, 0.8628, 0.7775, 0.8004, 0.7747, 0.8978, 0.7955, 0.7777, 0.8768, 0.7777, 0.797, 0.8187, 0.7189, 0.7116, 0.6188, 0.6852, 0.6032, 0.6076, 0.6146, 0.7457, 0.5533, 0.6448, 0.6415, 0.6314, 0.6196, 0.663, 0.644]
test_wers = [76.9891, 76.9691, 76.9771, 76.9858, 76.9908, 76.9895, 76.9741, 77.0018, 76.9724, 76.9754, 79.3012, 85.1721, 78.0784, 77.0735, 80.4793, 79.4683, 87.2244, 89.8649, 93.2848, 84.1184, 84.8292, 82.2961, 81.6771, 69.5542, 63.0118, 44.4586, 36.7739, 26.361, 26.1181, 40.3669, 17.9042, 21.6691, 15.0677, 10.8371, 12.5253, 9.3978, 8.0132, 7.1386, 9.428, 4.7014, 7.7329, 10.3201, 7.4449, 22.9165, 3.0345, 6.6643, 4.1779, 4.2434, 2.5941, 5.2142, 3.1282, 2.737, 7.056, 7.7971, 23.6425, 5.9667, 3.3953, 3.0587, 2.8332, 5.0032, 3.4182, 2.862, 4.9399, 3.2464, 3.5353, 2.8187, 2.6961, 10.102, 2.7507, 3.2386, 2.8326, 2.9259, 5.2206, 1.8256, 2.2667, 2.2937, 3.5302, 1.6105, 4.9358, 2.9498, 1.8543, 1.689, 2.8452, 2.8017, 6.2109, 1.9815, 2.6155, 2.1658, 2.4307, 2.3569, 1.7584, 2.4025, 2.4358, 3.364, 1.3745, 2.081, 1.8535, 2.7532, 2.0811, 2.9885]

counter = [i+1 for i in range(100)]


plt.plot(counter, train_losses, color='blue')
plt.plot(counter, test_losses, color='green')
plt.legend(['Train Loss', 'Test Loss'], loc='best')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.show()

plt.plot(counter, train_acces, color='blue')
plt.plot(counter, test_acces, color='green')
plt.legend(['Train Acc', 'Test Acc'], loc='best')
plt.xlabel('Epoch')
plt.ylabel('Acc')
plt.show()

plt.plot(counter, train_wers, color='blue')
plt.plot(counter, test_wers, color='green')
plt.legend(['Train Wer', 'Test Wer'], loc='best')
plt.xlabel('Epoch')
plt.ylabel('Wer')
plt.show()
